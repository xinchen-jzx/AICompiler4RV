# This is a basic workflow to help you get started with Actions

name: nightly-build

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ main ]
  schedule:
    # 20:00 JST
    - cron: "0 11 * * *"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      - uses: seanmiddleditch/gha-setup-ninja@master

      - name: Install prerequisites
        run: |
          sudo apt update
          sudo apt install -y uuid-dev
      
      - name: Clear LLVM
        run: |
          rm -rf ./thirdparty/llvm-project

      - name: Checkout the latest LLVM
        uses: actions/checkout@v2
        with:
          repository: llvm/llvm-project
          ref: main
          path: ./thirdparty/llvm-project

      - name: Build LLVM and MLIR
        run: |
          mkdir -p ./thirdparty/llvm-project/build
          pushd ./thirdparty/llvm-project/build
          cmake -G Ninja ../llvm \
            -DLLVM_ENABLE_PROJECTS=mlir \
            -DLLVM_BUILD_EXAMPLES=ON \
            -DLLVM_TARGETS_TO_BUILD="host" \
            -DCMAKE_BUILD_TYPE=Release \
            -DLLVM_ENABLE_ASSERTIONS=ON -Wno-dev
          cmake --build . --target check-mlir
          popd

      - name: Build this project
        run: |
          mkdir -p ./build
          pushd ./build
          cmake -G Ninja .. \
            -DLLVM_DIR=$PWD/../thirdparty/llvm-project/build/lib/cmake/llvm \
            -DMLIR_DIR=$PWD/../thirdparty/llvm-project/build/lib/cmake/mlir \
            -Wno-dev
           cmake --build . --target check-hello

